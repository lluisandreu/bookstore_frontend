var app=angular.module("starter",["ionic","webStorageModule"]);app.run(["$ionicPlatform", function($ionicPlatform){$ionicPlatform.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault()})}]),app.config(["$stateProvider", "$urlRouterProvider", function($stateProvider,$urlRouterProvider){$stateProvider.state("index",{url:"/",templateUrl:"templates/login.html",controller:"LoginCtrl"}).state("home",{url:"/home",templateUrl:"templates/home.html",controller:"MainCtrl"}).state("books",{url:"/books",templateUrl:"templates/books.html",controller:"BooksCtrl"}).state("book",{url:"/book/:bookId",templateUrl:"templates/book.html",controller:"BookCtrl"}).state("order",{url:"/order",templateUrl:"templates/order.html",controller:"OrderCtrl"}),$urlRouterProvider.otherwise("/")}]),app.service("backendUrl",function(){this.url=function(){return"http://eimtcms.uoc.edu/~lluisandreu/mybooks_backend/public_html/index.php/book/rest/"}}),app.factory("getQuantity",function(){return{getQuantity:function(items){var quantity=0;return angular.forEach(items,function(element,index){quantity+=parseInt(element.quantity)}),quantity}}}),app.filter("getById",function(){return function(input,id){for(var i=0,len=input.length;len>i;i++)if(+input[i].id==+id)return i;return null}}),app.controller("MainCtrl",["$scope", "webStorage", "$ionicSideMenuDelegate", "$ionicLoading", "getQuantity", function($scope,webStorage,$ionicSideMenuDelegate,$ionicLoading,getQuantity){$ionicLoading.show(),$scope.user=webStorage.get("username");var cart=webStorage.get("cart");cart?($scope.orderTotal=cart.total,$scope.quantity=getQuantity.getQuantity(cart.lineItems)):$scope.orderTotal=0,$ionicLoading.hide(),$scope.logOut=function(){webStorage.remove("login")},$scope.toggleLeft=function(){$ionicSideMenuDelegate.toggleLeft()}}]),app.controller("LoginCtrl",["$ionicSideMenuDelegate", "$scope", "$http", "$state", "webStorage", "$ionicLoading", function($ionicSideMenuDelegate,$scope,$http,$state,webStorage,$ionicLoading){var logged=webStorage.get("login");if("logged"==logged)$state.go("home");else{var loginUrl="http://multimedia.uoc.edu/frontend/auth.php";$ionicSideMenuDelegate.canDragContent(!1),$scope.message={},$scope.user={};var cart=[];$scope.login=function(data){var userLowercase=data.user.toLowerCase();$scope.user=$.param({user:userLowercase,passwd:data.passwd});var config={headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8;"}};$ionicLoading.show(),$http.post(loginUrl,$scope.user,config).then(function(resp){$scope.status=resp.data.status,"OK"==$scope.status?($ionicLoading.hide(),webStorage.set("login","logged"),webStorage.has("username")||webStorage.set("username",data.user),webStorage.has("cart")||(cart={user:data.user},cart.lineItems=[],cart.total=0,webStorage.set("cart",cart)),$state.go("home")):($ionicLoading.hide(),$scope.message.login="Your login failed. Please try again")})}}}]),app.controller("BooksCtrl",["$ionicSideMenuDelegate", "$http", "$scope", "webStorage", "backendUrl", "$ionicLoading", function($ionicSideMenuDelegate,$http,$scope,webStorage,backendUrl,$ionicLoading){$ionicLoading.show();var backendUrl=backendUrl.url();$ionicSideMenuDelegate.canDragContent(!0),$scope.books={},$scope.user=webStorage.get("username"),$http.get(backendUrl+"all").then(function(response){$scope.books=response.data,$ionicLoading.hide()},function(errResponse){console.error("Can't fetch ".backendUrl),$ionicLoading.hide()}),$scope.logout=function(){webStorage.remove("login")}}]),app.controller("BookCtrl",["$ionicSideMenuDelegate", "$stateParams", "$http", "$scope", "webStorage", "backendUrl", "$ionicLoading", "$ionicPopup", "$filter", "$state", "getQuantity", function($ionicSideMenuDelegate,$stateParams,$http,$scope,webStorage,backendUrl,$ionicLoading,$ionicPopup,$filter,$state,getQuantity){$ionicLoading.show(),$ionicSideMenuDelegate.canDragContent(!0);var backendUrl=backendUrl.url(),bookId=$stateParams.bookId;$scope.orderTodal=$scope.message={},$http.get(backendUrl+bookId).then(function(response){$scope.books=response.data,$ionicLoading.hide()},function(errResponse){console.error("Can't fetch ".backendUrl)}),$scope.addToCard=function(id,title,quantity,price){$ionicLoading.show();var lineItem={id:id,title:title,quantity:quantity,price:price},order=webStorage.get("cart"),found=$filter("getById")(order.lineItems,id);null!=found?order.lineItems[found].quantity=parseInt(order.lineItems[found].quantity)+parseInt(lineItem.quantity):order.lineItems.push(lineItem),console.log(order);var total=0;angular.forEach(order.lineItems,function(element,index){total+=Number(order.lineItems[index].price*order.lineItems[index].quantity)}),order.total=total,$scope.quantity=getQuantity.getQuantity(order.lineItems),webStorage.set("cart",order),$ionicLoading.hide()},$scope.cartAlert=function(lineItem){var alertPopup=$ionicPopup.alert({title:lineItem.title+" was added to the cart!",buttons:[{text:"Go to checkout",type:"button-balanced",onTap:function(e){$state.go("order"),alertPopup.close(),e.preventDefault()}},{text:"OK",type:"button-positive",onTap:function(e){alertPopup.close()}}]})}}]),app.controller("OrderCtrl",["backendUrl", "$ionicSideMenuDelegate", "$stateParams", "$http", "$scope", "$ionicPopup", "webStorage", "$ionicLoading", "getQuantity", function(backendUrl,$ionicSideMenuDelegate,$stateParams,$http,$scope,$ionicPopup,webStorage,$ionicLoading,getQuantity){$ionicLoading.show(),$ionicSideMenuDelegate.canDragContent(!0);var backendUrl=backendUrl.url(),total=0;$scope.cart=webStorage.get("cart"),$scope.lineItems=[],angular.forEach($scope.cart.lineItems,function(element,index){$scope.lineItems[index]=element}),$scope.quantity=getQuantity.getQuantity($scope.lineItems),$ionicLoading.hide(),$scope.removeLineItem=function(id){$ionicLoading.show();var findView=$scope.lineItems.indexOf(id);$scope.lineItems.splice(findView,1);var findStorage=$scope.cart.lineItems.indexOf(id);$scope.cart.lineItems.splice(findStorage,1),angular.forEach($scope.lineItems,function(element,index){total+=Number($scope.lineItems[index].price*$scope.lineItems[index].quantity)}),$scope.cart.total=total,webStorage.set("cart",$scope.cart),$scope.quantity=getQuantity.getQuantity($scope.lineItems),$ionicLoading.hide()},$scope.addQuantity=function(id){$ionicLoading.show(),$scope.lineItems[id].quantity=parseInt($scope.lineItems[id].quantity)+1,$ionicLoading.hide(),angular.forEach($scope.lineItems,function(element,index){total+=Number($scope.lineItems[index].price*$scope.lineItems[index].quantity)}),$scope.cart.lineItems[id].quantity=$scope.lineItems[id].quantity,$scope.cart.total=total,$scope.quantity=getQuantity.getQuantity($scope.lineItems),webStorage.set("cart",$scope.cart)},$scope.removeQuantity=function(id){$ionicLoading.show(),$scope.lineItems[id].quantity=$scope.lineItems[id].quantity-1,$ionicLoading.hide(),angular.forEach($scope.lineItems,function(element,index){total+=Number($scope.lineItems[index].price*$scope.lineItems[index].quantity)}),$scope.cart.lineItems[id].quantity=$scope.lineItems[id].quantity,$scope.cart.total=total,$scope.quantity=getQuantity.getQuantity($scope.lineItems),webStorage.set("cart",$scope.cart)},$scope.orderTotal=function(){var total=0;return angular.forEach($scope.lineItems,function(element,index){total+=Number($scope.lineItems[index].price*$scope.lineItems[index].quantity)}),$scope.cart.total=total,webStorage.set("cart",$scope.cart),total}}]);